apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: backstage-test-template
  title: Node App with GitHub Actions
  description: Create a Node service with GitHub Actions workflows, build docker image and deploy to kubernetes
  tags:
    - recommended
spec:
  owner: sourabh.rustagi@hotmail.com
  type: service
  parameters:
    - title: Provide some simple information
      required:
        - service_name
        - owner
      properties:
        service_name:
          title: Name
          type: string
          description: Unique name of the service.
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this service is for; optional.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        system:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              - kind: System
    - title: Provide Docker information
      required:
        - docker_username
        - docker_password
      properties:
        docker_username:
          title: Name
          type: string
          description: Docker user name for login and will be pushed to hub.
          ui:field: EntityNamePicker
        docker_password:
          title: Password
          type: string
          description: Passwod for Login, will be stored as secrets

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          serviceName: ${{ parameters.service_name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          docker_username: ${{ parameters.docker_username }}
          project_k8_namespace: dev # ket default for this template as a standard to become
          kustomize_path : ./deploy/k8s/overlays/dev # kepr default for this template as a standar to become
          project_org : kubeosx # kept default for this template
          repo_branch: main # kept default for this template

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.service_name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main
        repoVisibility: public
        secrets:
          "DOCKER_USER": ${{ parameters.docker_username }}
          "DOCKER_PASSWORD" : ${{ parameters.docker_password }}
          "AppName": ${{ parameters.service_name }}

    # Fetch Cloud CLuster Repo, Which is responsible to deploying using FLux
    - id: fetch-remote
      name: Fetch Remote kustomization
      action: fetch:plain
      input:
        url: https://github.com/kubeosx/kubeos-cluster.git
        targetPath: kubeos

    # Fetch a remote repo for getting template to commit in flux repo.
    - id: fetch-remote
      name: Fetch Remote kustomization
      action: fetch:template
      input:
        url: https://github.com/kubeosx/kubeos-autopr-templates.git
        path:
        targetPath: kubeos/clusters/dev
        values:
          component_id: ${{ parameters.service_name }}
          description: ${{ parameters.description }}
          artifact_id: ${{ parameters.service_name }}
          project_name: ${{ parameters.service_name }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          docker_username: ${{ parameters.docker_username }}
          project_k8_namespace: dev # ket default for this template as a standard to become
          kustomize_path : ./deploy/k8s/overlays/dev # kepr default for this template as a standar to become
          project_org : kubeosx # kept default for this template
          repo_branch: main # kept default for this template
          http_port: 8080

          
    # update the kustomization file 
    - id: append-file
      name: Append To File Or Create New
      action: roadiehq:utils:fs:append
      input:
        path: kubeos/clusters/dev/kustomization.yaml
        content: '  - ${{ parameters.project_name }}/'

    # PR back the change
    - id: pr-repo
      name: PR to repo
      action: publish:github:pull-request
      input:
        repoUrl: github.com?repo=kubeos-cluster&owner=kubeosx
        description: This is commiting project ${{ parameters.component_id }} for deployment
        branchName: feature/Onboarding-${{ parameters.component_id }}
        targetBranchName: main
        gitCommitMessage: Add New Deployment Config
        title: PR for new app :${{ parameters.component_id }}
        sourcePath: kubeos/clusters/dev
        targetPath: clusters/dev

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
